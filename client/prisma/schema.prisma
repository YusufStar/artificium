// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// basit user modeli - name, surname
model User {
  id            String  @id @default(cuid())
  firstName     String  @db.VarChar(255)
  lastName      String  @db.VarChar(255)
  email         String  @unique
  password      String
  profilePhoto  String?
  emailVerified Boolean @default(false)
  verifyTokenId String?

  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  verifyToken VerifyToken? @relation(fields: [verifyTokenId], references: [id])

  AI_Message AI_Message[]
}

// kullanici email dogrulama tokeni
model VerifyToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Organization {
  id     String  @id @default(cuid())
  name   String  @unique
  avatar String?

  members User[]

  projects Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String  @id @default(cuid())
  name        String
  description String?

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  artificium Artificium @relation(fields: [artificiumId], references: [id])

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  artificiumId String
}

model Artificium {
  id       String       @id @default(cuid())
  messages AI_Message[]

  projectId String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
}

model AI_Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  artificium   Artificium @relation(fields: [artificiumId], references: [id])
  artificiumId String
}
